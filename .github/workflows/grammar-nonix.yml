name: Rust with Java/Maven Build

on:
  push:
    branches: [ main, master ]
    paths:
      - '**.typ'
  pull_request:
    branches: [ main, master ]
    paths:
      - '**.typ'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    # Set up Java with caching
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'
    
    # Install Maven
    - name: Set up Maven
      uses: stCarolas/setup-maven@v5
      with:
        maven-version: '3.8.6'

    # Set up Rust with caching
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true

    # Cache Rust dependencies
    - name: Cache Rust dependencies
      uses: Swatinem/rust-cache@v2
      with:
        # Optional: cache key prefix
        prefix-key: "rust-cache"
    
    # Cache the Rust package itself to avoid reinstalling
    - name: Cache Rust package
      id: package-cache
      uses: actions/cache@v3
      with:
        path: ~/.cargo/bin
        key: ${{ runner.os }}-rust-package-${{ hashFiles('**/Cargo.toml') }}

    # Install your Rust package (Replace with your actual package name)
    - name: Install Rust package
      run: cargo install --git=https://github.com/antonWetzel/typst-languagetool cli --features=bundle
      # Skip installation if the package is already cached
      if: steps.rust-cache.outputs.cache-hit != 'true'

    - name: Run Grammar Check
      run: |
          # Create wrapper script
          cat > grammar-check-wrapper.sh << 'EOF'
          #!/usr/bin/env bash
          GRAMMAR_CHECKER="typst-languagetool"
          OUTPUT_FILE="/tmp/grammar_check_output.txt"
          ERROR_PATTERN="(info|Failed to compile document)"
      
          # Run the grammar checker and capture its output
          $GRAMMAR_CHECKER "$@" --bundle | tee "$OUTPUT_FILE"
      
          # Check if the output contains any error indicators
          if grep -Ei "$ERROR_PATTERN" "$OUTPUT_FILE" > /dev/null; then
              echo "::error::Grammar issues found. Check the output above."
              exit 1
          else
              echo "::notice::No grammar issues detected."
              exit 0
          fi
          EOF
          chmod +x grammar-check-wrapper.sh
          
          # Use the wrapper script
          ./grammar-check-wrapper.sh check --main=main.typ --options=typst_languagetool.json"
